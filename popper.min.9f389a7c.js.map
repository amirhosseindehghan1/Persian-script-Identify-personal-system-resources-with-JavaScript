{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/getReferenceNode.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js","../../../../AppData/Roaming/npm/node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["document","navigator","longerTimeoutBrowsers","length","userAgent","called","Promise","then","scheduled","window","supportsMicroTasks","functionToCheck","getType","toString","call","element","nodeType","ownerDocument","defaultView","getComputedStyle","css","nodeName","parentNode","host","body","overflow","overflowX","overflowY","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","version","documentElement","isIE","offsetParent","nextElementSibling","indexOf","getStyleComputedProperty","getOffsetParent","firstElementChild","node","getRoot","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","order","setEnd","commonAncestorContainer","contains","start","isOffsetContainer","element1root","findCommonOffsetParent","upperSide","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","axis","sideA","parseFloat","styles","Math","html","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","offsetHeight","getBordersSize","getClientRect","max","isHTML","parentRect","scrollParent","getScrollParent","borderTopWidth","borderLeftWidth","fixedPosition","childrenRect","marginTop","marginLeft","isIE10","parent","includeScroll","excludeScroll","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","relativeOffset","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","getParentNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","key","sort","b","area","a","filteredAreas","filter","variation","computedPlacement","commonOffsetParent","x","marginBottom","marginRight","result","hash","replace","matched","split","popperRect","getOuterSizes","isHoriz","mainSide","secondarySide","measurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","modifiersToRun","ends","slice","modifiers","forEach","warn","fn","enabled","data","state","isDestroyed","options","positionFixed","flip","computeAutoPlacement","originalPlacement","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","charAt","property","toUpperCase","i","toCheck","prefix","isModifierEnabled","removeAttribute","style","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollParents","scrollElement","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","n","isNaN","isFinite","prop","unit","isNumeric","value","attributes","setAttribute","instance","arrowElement","arrowStyles","getReferenceOffsets","round","floor","v","referenceWidth","isVertical","horizontalToInteger","popperWidth","bothOddWidth","verticalToInteger","test","y","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","invertTop","invertLeft","arrow","requesting","isRequired","requested","isModifierRequired","querySelector","sideCapitalized","toLowerCase","altSide","opSide","sideValue","center","validPlacements","placements","counter","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","popperOffsets","overflowsLeft","overflowsRight","flipVariations","flipVariationsByContent","flippedVariation","overlapsRef","getOppositeVariation","getPopperOffsets","str","size","offset","frag","divider","fragments","search","splitRegex","ops","concat","index","mergeWithPrevious","op","reduce","toValue","index2","parseOffset","basePlacement","priority","escapeWithReference","min","side","shiftOffsets","bound","hide","requestAnimationFrame","debounce","bind","Popper","Defaults","jquery","modifierOptions","onLoad","update","enableEventListeners","destroy","PopperUtils","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","cb"],"mappings":"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","file":"popper.min.9f389a7c.js","sourceRoot":"..\\src","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}